-- MODELS A USER
CREATE TABLE USER (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    EMAIL VARCHAR(250) NOT NULL,
    PASSWORD VARCHAR(250) NOT NULL,
    CONSTRAINT U_USER_EMAIL UNIQUE (EMAIL)
);
-- MODELS A UNIVERSITY COURSE FOR A GIVEN SEMESTER
CREATE TABLE CLASS (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    CODE VARCHAR(63) NOT NULL,
    LEVEL INT NOT NULL,
    TERM VARCHAR(63) NOT NULL,
    ACADEMIC_YEAR INT NOT NULL,
    CONSTRAINT U_CLASS_CODE_LEVEL_CODE_ACADEMIC_YEAR UNIQUE (CODE, LEVEL, TERM, ACADEMIC_YEAR)
);
-- MODELS A KEY-VALUE ATTRIBUTE PAIR FOR A CLASS
CREATE TABLE CLASS_ATTR (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    CLASS_ID INT NOT NULL,
    ATTR_NAME VARCHAR(250) NOT NULL,
    ATTR_VALUE VARCHAR(MAX) DEFAULT NULL,
    CONSTRAINT U_CLASS_ATTR_CLASS_ID_ATTR_NAME_UNIQUE UNIQUE (CLASS_ID, ATTR_NAME),
    CONSTRAINT FK_CLASS_ATTR_CLASS_ID_CLASS_ID FOREIGN KEY (CLASS_ID) REFERENCES CLASS(ID)
);
-- MODELS THE ENROLLMENT OF A USER IN A CLASS
CREATE TABLE CLASS_ENROLLMENT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    CLASS_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    PINNED BOOLEAN DEFAULT FALSE,
    CONSTRAINT U_CLASS_ID_USER_ID UNIQUE (CLASS_ID, USER_ID),
    CONSTRAINT FK_CLASS_ENROLLMENT_CLASS_ID_CLASS_ID FOREIGN KEY (CLASS_ID) REFERENCES CLASS(ID),
    CONSTRAINT FK_CLASS_ENROLLMENT_USER_ID_USER_ID FOREIGN KEY (USER_ID) REFERENCES USER(ID)
);
-- MODELS AN ASSIGNMENT FOR A CLASS
CREATE TABLE ASSIGNMENT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    CLASS_ID INT NOT NULL,
    NAME VARCHAR(250) NOT NULL,
    DUE_DATE DATE,
    CONSTRAINT U_ASSIGNMENT_CLASS_ID_NAME UNIQUE (CLASS_ID, NAME),
    CONSTRAINT FK_ASSIGNMENT_CLASS_ID_CLASS_ID FOREIGN KEY (CLASS_ID) REFERENCES CLASS(ID)
);
-- MODELS A KEY-VALUE ATTRIBUTE PAIR FOR AN ASSIGNMENT
CREATE TABLE ASSIGNMENT_ATTR (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ASSIGNMENT_ID INT NOT NULL,
    ATTR_NAME VARCHAR(250) NOT NULL,
    ATTR_VALUE VARCHAR(MAX) DEFAULT NULL,
    CONSTRAINT U_ASSIGNMENT_ATTR_ASSIGNMENT_ID_NAME UNIQUE (ASSIGNMENT_ID, ATTR_NAME),
    CONSTRAINT FK_ASSIGNMENT_ATTR_ASSIGNMENT_ID_ASSIGNMENT_ID FOREIGN KEY (ASSIGNMENT_ID) REFERENCES ASSIGNMENT(ID)
);
-- MODELS THE ENROLLMENT OF A USER FOR AN ASSIGNMENT
CREATE TABLE ASSIGNMENT_ENROLLMENT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ASSIGNMENT_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    PINNED BOOLEAN DEFAULT FALSE,
    CONSTRAINT U_ASSIGNMENT_ID_USER_ID UNIQUE (ASSIGNMENT_ID, USER_ID),
    CONSTRAINT FK_ASSIGNMENT_ENROLLMENT_ASSIGNMENT_ID_ASSIGNMENT_ID FOREIGN KEY (ASSIGNMENT_ID) REFERENCES ASSIGNMENT(ID),
    CONSTRAINT FK_ASSIGNMENT_ENROLLMENT_USER_ID_USER_ID FOREIGN KEY (USER_ID) REFERENCES USER(ID)
);
-- MODELS A CODE BLOCK FOR A CODING LANGUAGE
CREATE TABLE CODE_BLOCK (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    LANG INT NOT NULL,          -- CODING LANGUAGE
    CODE text DEFAULT NULL
);
-- MODELS A TEST CASE FOR AN ASSIGNMENT
CREATE TABLE TEST_CASE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    ASSIGNMENT_ID INT NOT NULL,     -- ID OF ASSIGNMENT
    CODE_BLOCK_ID INT NOT NULL,     -- ID OF TEST CODE
    AUTHOR VARCHAR(63) DEFAULT NULL,
    VOTE_SCORE INT NOT NULL DEFAULT 0,
    TOTAL_RUNS INT NOT NULL DEFAULT 0,      -- NUMBER OF TIMES TEST CASE WAS RUN
    PASS_RUNS INT NOT NULL DEFAULT 0,       -- NUMBER OF TIMES TEST CASE PASSED
    CONSTRAINT FK_TEST_CASE_ASSIGNMENT_ID_ASSIGNMENT_ID FOREIGN KEY (ASSIGNMENT_ID) REFERENCES ASSIGNMENT(ID),
    CONSTRAINT FK_TEST_CASE_CODE_BLOCK_ID_CODE_BLOCK_ID FOREIGN KEY (CODE_BLOCK_ID) REFERENCES CODE_BLOCK(ID)
);
-- MODELS A TEST RESULT FOR A TEST CASE
CREATE TABLE TEST_RESULT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    TEST_CASE_ID INT NOT NULL,
    RESULT BOOLEAN DEFAULT NULL,
    RESPONSE TEXT DEFAULT NULL,
    CONSTRAINT FK_TEST_RESULT_TEST_CASE_ID_TEST_CASE_ID FOREIGN KEY (TEST_CASE_ID) REFERENCES TEST_CASE(ID)
);
-- MODELS A SOURCE
CREATE TABLE SOURCE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(63) NOT NULL,              -- NAME OF SOURCE
    CONSTRAINT U_SOURCE_NAME UNIQUE (NAME)
);
-- MODELS A COMMENT ON A SOURCE
CREATE TABLE COMMENT (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    SOURCE INT NOT NULL,            -- TYPE OF SOURCE BEING COMMENTED ON
    AUTHOR VARCHAR(63) DEFAULT NULL,
    SOURCE_ID INT NOT NULL,         -- ID OF SOURCE BEING COMMENTED ON
    CONTENT VARCHAR(MAX) DEFAULT NULL,
    VOTE_SCORE INT NOT NULL DEFAULT 0,
    CONSTRAINT FK_COMMENT_SOURCE_SOURCE_ID FOREIGN KEY (SOURCE) REFERENCES SOURCE(ID)
);
-- MODELS A VOTE ON A SOURCE
CREATE TABLE VOTE (
    ID INT PRIMARY KEY AUTO_INCREMENT,
    SOURCE INT NOT NULL,            -- TYPE OF SOURCE BEING VOTED ON
    AUTHOR VARCHAR(63) DEFAULT NULL,
    SOURCE_ID INT NOT NULL,         -- ID OF SOURCE BEING VOTED ON
    ACTION VARCHAR(63) NOT NULL,    -- EITHER UPVOTE OR DOWNVOTE
    CONSTRAINT U_VOTE_AUTHOR_SOURCE_ID_SOURCE UNIQUE (AUTHOR, SOURCE_ID, SOURCE),
    CONSTRAINT FK_VOTE_SOURCE_SOURCE_ID FOREIGN KEY (SOURCE) REFERENCES SOURCE(ID)
);

